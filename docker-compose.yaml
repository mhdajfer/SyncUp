version: "3.8"

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - kafka_network

  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks:
      - kafka_network

  user_service:
    build:
      context: ./backend/User Service
      dockerfile: Dockerfile
    ports:
      - "3003:3003"
    env_file:
      - ./backend/User Service/.env
    environment:
      KAFKA_BROKER: kafka:9092
      SERVICE: "user_service"
    networks:
      - kafka_network

  api_gateway:
    build:
      context: ./backend/Api_Gateway
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    env_file:
      - ./backend/Api_Gateway/.env
    environment:
      KAFKA_BROKER: kafka:9092
      SERVICE: "api_gateway"
    networks:
      - kafka_network

  communication_service:
    build:
      context: ./backend/Communication_service
      dockerfile: Dockerfile
    ports:
      - "3004:3004"
    env_file:
      - ./backend/Communication_service/.env
    environment:
      KAFKA_BROKER: kafka:9092
      SERVICE: "communication_service"
    networks:
      - kafka_network

  project_service:
    build:
      context: ./backend/Project_service
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    env_file:
      - ./backend/Project_service/.env
    environment:
      KAFKA_BROKER: kafka:9092
      SERVICE: "project_service"
    networks:
      - kafka_network

  tenant_service:
    build:
      context: ./backend/Tenant_Service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    env_file:
      - ./backend/Tenant_Service/.env
    environment:
      KAFKA_BROKER: kafka:9092
      SERVICE: "tenant_service"
    networks:
      - kafka_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    depends_on:
      - api_gateway
    networks:
      - kafka_network
volumes:
  kafka-data:

networks:
  kafka_network:
    driver: bridge
